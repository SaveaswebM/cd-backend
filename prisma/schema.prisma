// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum UserType{
  Superadmin
  Admin
  User
}

enum SubscriptionType{
Free
Standard
Premium

}

enum ActivityType {
  Monthly
  Quarterly
  Yearly
}
enum MonthType {
  January
  February
  March
  April
  May
  June
  July
  August
  September
  October
  November
  December
}

model Year {
  id           Int           @id @default(autoincrement())
  year         Int           @unique
  activityData ActivityData[]
}

model Activity {
  id           Int           @id @default(autoincrement())
  name         String
  type         ActivityType
  activityData ActivityData[] 
}
model QuarterlyType{
  id           Int           @id @default(autoincrement())
  startMonth   MonthType  
  endMonth     MonthType  
  activityData ActivityData[] 
}
model ActivityData {
  id         Int       @id @default(autoincrement())
  taskName       String
  type       ActivityType
  year       Year      @relation(fields: [yearId], references: [id])
  yearId     Int
  month      MonthType?
  dueDate      DateTime
  activity   Activity   @relation(fields: [activityId], references: [id])
  activityId Int
   quarterlyType  QuarterlyType?   @relation(fields: [quarterlyTypeId], references: [id])
  quarterlyTypeId Int?

}

model TableData {
  id         Int    @id @default(autoincrement())
 key         String?
 companyName String?
 activityName String?
 year        Int?
 month         MonthType?
 selectedActivityType  String
  data       String // Adjust this field as necessary to store your table data.

  user       User[]
}

model User {
  id                 Int              @id @default(autoincrement())
  name               String?
  email              String           @unique
  password           String?
  userType           UserType
  subscriptionType   SubscriptionType
  subscriptionAmount Int
 tableDataId            Int?             // Add this field to refer to a specific TableData entry
  tableData              TableData?       @relation(fields: [tableDataId], references: [id])
 
  otp                String?          // OTP field
  otpExpiration      DateTime?        // OTP expiration time
}

model Link {
  id             Int     @id @default(autoincrement())
  link           String  @unique
  linkownerName  String
  linkreciever   String
  data           Json
}